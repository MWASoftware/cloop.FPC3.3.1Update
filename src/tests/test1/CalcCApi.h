/* This file was autogenerated by cloop - Cross Language Object Oriented Programming */

#ifndef CALC_C_API_H
#define CALC_C_API_H

#include <stdint.h>

#ifndef CLOOP_EXTERN_C
#ifdef __cplusplus
#define CLOOP_EXTERN_C extern "C"
#else
#define CLOOP_EXTERN_C
#endif
#endif


#define Disposable_VERSION 1

struct Disposable;

struct DisposableVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct Disposable* self);
};

struct Disposable
{
	void* cloopDummy[1];
	struct DisposableVTable* vtable;
};

CLOOP_EXTERN_C void Disposable_dispose(struct Disposable* self);

#define Status_VERSION 3

struct Status;

struct StatusVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct Status* self);
	int (*getCode)(const struct Status* self);
	void (*setCode)(struct Status* self, int code);
};

struct Status
{
	void* cloopDummy[1];
	struct StatusVTable* vtable;
};

CLOOP_EXTERN_C void Status_dispose(struct Status* self);
CLOOP_EXTERN_C int Status_getCode(const struct Status* self);
CLOOP_EXTERN_C void Status_setCode(struct Status* self, int code);

#define Calculator_VERSION 5

struct Calculator;

struct CalculatorVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct Calculator* self);
	int (*sum)(const struct Calculator* self, struct Status* status, int n1, int n2);
	int (*getMemory)(const struct Calculator* self);
	void (*setMemory)(struct Calculator* self, int n);
	void (*sumAndStore)(struct Calculator* self, struct Status* status, int n1, int n2);
};

struct Calculator
{
	void* cloopDummy[1];
	struct CalculatorVTable* vtable;
};

CLOOP_EXTERN_C void Calculator_dispose(struct Calculator* self);
CLOOP_EXTERN_C int Calculator_sum(const struct Calculator* self, struct Status* status, int n1, int n2);
CLOOP_EXTERN_C int Calculator_getMemory(const struct Calculator* self);
CLOOP_EXTERN_C void Calculator_setMemory(struct Calculator* self, int n);
CLOOP_EXTERN_C void Calculator_sumAndStore(struct Calculator* self, struct Status* status, int n1, int n2);

#define Calculator2_VERSION 8

struct Calculator2;

struct Calculator2VTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct Calculator2* self);
	int (*sum)(const struct Calculator2* self, struct Status* status, int n1, int n2);
	int (*getMemory)(const struct Calculator2* self);
	void (*setMemory)(struct Calculator2* self, int n);
	void (*sumAndStore)(struct Calculator2* self, struct Status* status, int n1, int n2);
	int (*multiply)(const struct Calculator2* self, struct Status* status, int n1, int n2);
	void (*copyMemory)(struct Calculator2* self, const struct Calculator* calculator);
	void (*copyMemory2)(struct Calculator2* self, const int* address);
};

struct Calculator2
{
	void* cloopDummy[1];
	struct Calculator2VTable* vtable;
};

CLOOP_EXTERN_C void Calculator2_dispose(struct Calculator2* self);
CLOOP_EXTERN_C int Calculator2_sum(const struct Calculator2* self, struct Status* status, int n1, int n2);
CLOOP_EXTERN_C int Calculator2_getMemory(const struct Calculator2* self);
CLOOP_EXTERN_C void Calculator2_setMemory(struct Calculator2* self, int n);
CLOOP_EXTERN_C void Calculator2_sumAndStore(struct Calculator2* self, struct Status* status, int n1, int n2);
CLOOP_EXTERN_C int Calculator2_multiply(const struct Calculator2* self, struct Status* status, int n1, int n2);
CLOOP_EXTERN_C void Calculator2_copyMemory(struct Calculator2* self, const struct Calculator* calculator);
CLOOP_EXTERN_C void Calculator2_copyMemory2(struct Calculator2* self, const int* address);

#define Factory_VERSION 5

struct Factory;

struct FactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct Factory* self);
	struct Status* (*createStatus)(struct Factory* self);
	struct Calculator* (*createCalculator)(struct Factory* self, struct Status* status);
	struct Calculator2* (*createCalculator2)(struct Factory* self, struct Status* status);
	struct Calculator* (*createBrokenCalculator)(struct Factory* self, struct Status* status);
};

struct Factory
{
	void* cloopDummy[1];
	struct FactoryVTable* vtable;
};

CLOOP_EXTERN_C void Factory_dispose(struct Factory* self);
CLOOP_EXTERN_C struct Status* Factory_createStatus(struct Factory* self);
CLOOP_EXTERN_C struct Calculator* Factory_createCalculator(struct Factory* self, struct Status* status);
CLOOP_EXTERN_C struct Calculator2* Factory_createCalculator2(struct Factory* self, struct Status* status);
CLOOP_EXTERN_C struct Calculator* Factory_createBrokenCalculator(struct Factory* self, struct Status* status);


#endif	// CALC_C_API_H
