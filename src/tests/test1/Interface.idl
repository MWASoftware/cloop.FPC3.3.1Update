// Base for all interfaces.
interface Disposable
{
	void dispose();
}

/* Status is the *exception* class. */
[exception]
interface Status : Disposable
{
	int getCode() const;
	void setCode(int code);
}

interface Calculator : Disposable
{
	int sum(Status status, int n1, int n2) const;
	int getMemory() const;
	void setMemory(int n);
	void sumAndStore(Status status, int n1, int n2);
}

interface Calculator2 : Calculator
{
	int multiply(Status status, int n1, int n2) const;
	void copyMemory(const Calculator calculator);
}

interface Factory : Disposable
{
	Status createStatus();
	Calculator createCalculator(Status status);
	Calculator2 createCalculator2(Status status);
	Calculator createBrokenCalculator(Status status);
}
